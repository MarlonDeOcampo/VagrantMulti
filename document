# Setting up all the environments

# We can use baremetals or virtual-machines to setup our environment
# We can even use Vagrant to automate the process of setting up our virtual machines in our local

# Installing using the baremetal

# => When installing using the bare metal, we have to install the ubuntu/Linux using a bootable usb installer
# => once the OS is running and you are able to login, proceed with the instruction part after installing virtualbox and vagrant


#when using virtual machines there are some prerequisite softwares that we have to install first

1. virtualbox version 6.1 # this is the latest version that I found with less problem installing 
    # the k3s and vagrant during this time of documentation. 
    # This may vary depends on the version of vagrant and what version of virtual box it currently support. 

2. vagrant @latest version # if you decided to automate the process of installing the initial os and packages


# Prerequisite file Installation
# Please see the documentation of each particular software to see the latest version 

# Here we are installing Vitual machine 6.1 and Vagrant 2.3.7

1. open the terminal and execute the following command
 
    "sudo apt update && sudo apt upgrade"

    "sudo apt install virtualbox -y"

  # you can launch the virtual box by executing "virtualbox" to the console

2. We are now installing the Vagrant using the terminal as well. Execute the command below - this is only when you decide to automate the process.

    "sudo apt install vagrant -y"

    # We can validate if the installation was successful by checking the version

    "vagrant --version"

    # If there is no version shown after the execution of the sudo command. Please try to do it again from the start 
    # or check the Vagrant documention for more guided instruction


# Presumambly, we are done with the installation without any problems. We can now proceed on creating our nodes using Vagrant

Before anything else, what is Vagrant? 
# Vagrant is a tool that automates the installation of virtualbox's images. Without Vagrant, installation of OS, Softwares and or packages may consume
# a lot of time specially when you are just about to try or trying to learn all the softwares you want to install on our virtual environment 
# as well as all the softwares that are dependent on the OS you initially installed on the virtual machine.

# Vagrant runs in the background without a nice UI interface. You can only see the progress in the terminal where you have executed the command.
# Vagrant also dependent on a file called "Vagrantfile" that should be manually created in the presently active directory you are at or the target directory you want to execute the command. 
# To make this more clearer, lets start to do it in action

 Go to your target folder or create a folder to any location that youve like. 
 # For me, My Vagrantfile is located on the same location as where this document resides. 
 # The Vagrantfile should be in a Title case format or the first letter word is capital, else the script wont work
 # Open the terminal and make sure that you are in the right directory -(same directory as where the Vigrant file is)
 # execute the command
   "vagrant up"


# wait until you are able to type again on the terminal. Please check if there were errors during the installation. 
# At the end of the installation, you will normally see 3 running virtualbox machines when you open the virtualbox app
# When you seems to feel that all were good and there were no errors during the installation, lets now check if the k3s is perfectly working at this point

# go to the terminal and type this command

"Vagrant ssh server01"
# This script will allow us to login to our primary node which is the server01
# after execution of the code. the terminal current address should be redirected to the server01 address
# execute this command to check the connected nodes in our cluster
"sudo -i"
"kubectl get node"

# When you see 3 nodes were up and running. That means our installation were successfull


# Please see the Vagrantfile in our directory.
# As you can see in the Vagrantfile. We provided a provisions to our 2 servers that will install the k3s automatically
# As for the agent, we don't automate the installation of the k3s. Instead, we are going to login to it on ssh then install the k3s manually as a binary


# if you have noticed, we added a flag "--disable-agent" to our provision when installing our k3s in our servers. that means we are disabling agent creation to our servers
# by doing that, automatic server creation will also be disabled by default. we have to add the agent for the k3s to add the server automatically
# right now, we are going to add the agent to our primary server. 
# to do that we have to get the token of our server first. Execute this command
  sudo cat /var/lib/rancher/k3s/server/node-token

# adding agent to the server


# Login to the target agent using ssh 
# Install the k3s binary using this command without quote
"culr -L -o https://github.com/rancher/k3s/"

# copy the token then execute
# replace the NODE-TOKEN with the tocken given by the server
"sudo ./k3s agent --server https://myserver:6443 --token NODE-TOKEN"

# the token should look like this
"K103818f78cfb29e5da49aef10349d21516c7e8e1266c344e9672888ad0a39cdad3::server:1b71580ba4b454717e292af5102d101f"





# sudo -i
# ufw disable 
# or include 
# ufw allow 6443/tcp #apiserver
# ufw allow from 10.42.0.0/16 to any #pods
# ufw allow from 10.43.0.0/16 to any #services

curl -sfL https://get.k3s.io | sh -s - server \
--token 1b71580ba4b454717e292af5102d101f \
--tls-san 192.168.0.200 \
--cluster-init

curl -sfL https://get.k3s.io | sh -s - server \
--token 1b71580ba4b454717e292af5102d101f \
--tls-san 192.168.0.200 


export INSTALL_K3S_EXEC="--docker --write-kubeconfig ~/.kube/config --write-kubeconfig-mode 666 --tls-san $K3S_EXTERNAL_IP --kube-apiserver-arg service-node-port-range=1-65000 --kube-apiserver-arg advertise-address=$K3S_EXTERNAL_IP --kube-apiserver-arg external-hostname=$K3S_EXTERNAL_IP"

curl -sfL https://docs.rancher.cn/k3s/k3s-install.sh |  sh -

curl -sfL https://get.k3s.io/ | INSTALL_K3S_EXEC="server --cluster-init --write-kubeconfig-mode 664 --write-kubeconfig ~/.kube/config --tls-san $K3S_EXTERNAL_IP --kube-apiserver-arg service-node-port-range=1-65000 --kube-apiserver-arg advertise-address=$K3S_EXTERNAL_IP --kube-apiserver-arg external-hostname=$K3S_EXTERNAL_IP" sh - 
        sudo cp /var/lib/rancher/k3s/server/node-token /vagrant/shared/node-token
        cp /etc/rancher/k3s/config.yaml /vagrant/shared


curl -vk https://192.168.0.200:6443/cacerts

journalctl -u k3s-agent.service