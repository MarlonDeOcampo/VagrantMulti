apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-consul-server
  namespace: hashicorp
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
spec:
  serviceName: consul-consul-server
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: consul
      component: server
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: server
        hasDNS: "true"
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": fe07b3b57fd76489e88ed0b5064454bac17e015ac6b455d84d63723e8fd062e6
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: consul
                  release: "consul"
                  component: server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      serviceAccountName: consul-consul-server
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      volumes:
        - name: config
          configMap:
            name: consul-consul-server-config
        - name: extra-config
          emptyDir: {}
      initContainers:
      - name: locality-init
        image: hashicorp/consul-k8s-control-plane:1.2.2
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
          - "/bin/sh"
          - "-ec"
          - |
            consul-k8s-control-plane fetch-server-region -node-name "$NODE_NAME" -output-file /consul/extra-config/locality.json
        volumeMounts:
          - name: extra-config
            mountPath: /consul/extra-config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          runAsUser: 100
      containers:
        - name: consul
          image: "hashicorp/consul:1.16.2"
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONSUL_DISABLE_PERM_MGMT
              value: "true"
            
          command:
            - "/bin/sh"
            - "-ec"
            - |

              cp /consul/config/extra-from-values.json /consul/extra-config/extra-from-values.json
              [ -n "${HOST_IP}" ] && sed -Ei "s|HOST_IP|${HOST_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${POD_IP}" ] && sed -Ei "s|POD_IP|${POD_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${HOSTNAME}" ] && sed -Ei "s|HOSTNAME|${HOSTNAME?}|g" /consul/extra-config/extra-from-values.json

              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -advertise="${ADVERTISE_IP}" \
                -config-dir=/consul/config \
                -config-file=/consul/extra-config/extra-from-values.json \
                -config-file=/consul/extra-config/locality.json
          volumeMounts:
            - name: data-hashicorp
              mountPath: /consul/data
            - name: config
              mountPath: /consul/config
            - name: extra-config
              mountPath: /consul/extra-config
          ports:
            - name: http
              containerPort: 8500
            - name: grpc
              containerPort: 8502
              protocol: "TCP"
            - name: serflan-tcp
              containerPort: 8301
              protocol: "TCP"
            - name: serflan-udp
              containerPort: 8301
              protocol: "UDP"
            - name: serfwan-tcp
              containerPort: 8302
              protocol: "TCP"
            - name: serfwan-udp
              containerPort: 8302
              protocol: "UDP"
            - name: server
              containerPort: 8300
            - name: dns-tcp
              containerPort: 8600
              protocol: "TCP"
            - name: dns-udp
              containerPort: 8600
              protocol: "UDP"
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 100
  volumeClaimTemplates:
    - metadata:
        name: data-hashicorp
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Source: consul/templates/crd-controlplanerequestlimits.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-exportedservices.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-ingressgateways.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-jwtproviders.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-meshes.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-proxydefaults.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-samenessgroups.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-servicedefaults.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-serviceintentions.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-serviceresolvers.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-servicerouters.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-servicesplitters.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/crd-terminatinggateways.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0
---
# Source: consul/templates/connect-inject-mutatingwebhookconfiguration.yaml
# The MutatingWebhookConfiguration to enable the Connect injector.

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: consul-consul-connect-injector
  namespace: hashicorp
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
webhooks:
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-proxydefaults
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-proxydefaults.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxydefaults
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-mesh
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-mesh.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-servicedefaults
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicedefaults.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicedefaults
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-serviceresolver
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-serviceresolver.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - serviceresolvers
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-servicerouter
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicerouter.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicerouters
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-servicesplitter
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicesplitter.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicesplitters
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-serviceintentions
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-serviceintentions.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - serviceintentions
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-ingressgateway
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-ingressgateway.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingressgateways
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-terminatinggateway
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-terminatinggateway.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - terminatinggateways
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-exportedservices
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-exportedservices.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - exportedservices
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-controlplanerequestlimits
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-controlplanerequestlimit.consul.hashicorp.com
  rules:
    - apiGroups:
        - consul.hashicorp.com
      apiVersions:
        - v1alpha1
      operations:
        - CREATE
        - UPDATE
      resources:
        - controlplanerequestlimits
  sideEffects: None
- name: consul-consul-connect-injector.consul.hashicorp.com
  # The webhook will fail scheduling all pods that are not part of consul if all replicas of the webhook are unhealthy.
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: [ consul ]
  failurePolicy: Fail
  sideEffects: None
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: "/mutate"
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [ "" ]
    apiVersions: [ "v1" ]
    resources: [ "pods" ]
  namespaceSelector:
      matchExpressions:
        - key: "kubernetes.io/metadata.name"
          operator: "NotIn"
          values: ["kube-system","local-path-storage","openebs"]
      
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: hashicorp
      path: /mutate-v1alpha1-jwtprovider
  failurePolicy: Fail
  name: mutate-jwtprovider.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - jwtproviders
  sideEffects: None

